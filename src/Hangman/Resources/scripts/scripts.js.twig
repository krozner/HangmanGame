var hangman = new function()
{
    this.game = {
        id: null,
        word: null,
        tries_left: null,
        origin: {
            hint: null,
            category: null
        }
    };

    var context = document.getElementById("stickman").getContext('2d');

    var canvas = function()
    {
        context.beginPath();
        context.strokeStyle = "#fff";
        context.lineWidth = 2;
    };

    var load = function(url, method, success)
    {
        $.ajax({
            method: method,
            url: url,
            beforeSend: function(xhr)
            {
                $('.loading').remove();
                var spinner = $('<span>')
                    .addClass('loading fa fa-spinner fa-spin fa-3x fa-fw')
                    .css({position: 'absolute', margin: '0 0 0 -35px'});
                spinner.offset({top: $('canvas').offset().top + $('canvas').height()/2 });

                $('body').append(spinner);
            },
            complete: function() {
                $('.loading').remove();
            },
            success: function(response) {
                success(response);
            }
        });
    };

    this.draw = function()
    {
        draw = function($pathFromx, $pathFromy, $pathTox, $pathToy)
        {
            context.moveTo($pathFromx, $pathFromy);
            context.lineTo($pathTox, $pathToy);
            context.stroke();
        };

        var lives = hangman.game.tries_left;
        var drawArray =
            [
                function() { },
                function() { draw (60, 70, 20, 100); },
                function() { draw (60, 70, 100, 100); },
                function() { draw (60, 46, 20, 50); },
                function() { draw (60, 46, 100, 50); },
                function() { draw (60, 36, 60, 70); },
                function()
                {
                    context.beginPath();
                    context.arc(60, 25, 10, 0, Math.PI*2, true);
                    context.stroke();
                },
                function() { draw (60, 5, 60, 15); },
                function() { draw (0, 5, 70, 5); } ,
                function() { draw (10, 0, 10, 600); },
                function() { draw (10, 600, 10, 100); },
                function() { draw (0, 150, 150, 150); }
            ];

        if(! drawArray[lives]) {
            return;
        }
        drawArray[lives]();
    };

    this.hint = function()
    {
        var hint = hangman.game.origin.hint;
        $('#clue').html(hint ? "Clue: " + hint : "");
    };

    this.reset = function()
    {
        canvas();

        $('#clue').html('');
        $('#buttons li').removeClass('active');

        context.clearRect(0, 0, 400, 400);

        load("{{ path('hangman_api_start_game') }}", 'POST', function(response)
        {
            $('#catagory').html("Category: " + response.origin.category);
            hangman.game = response;
            guessResult();
        });
    };

    var guessResult = function()
    {
        var $word = $('<ul>', {id: 'my-word'}),
            word = hangman.game.word;
        for(var i = 0; i < word.length; i++) {
            $word.append($('<li>', {'class': 'guess'}).html(word[i]));
        }

        $('#hold').html($word);

        if (hangman.game.game_over)
        {
            $('#mylives').html(hangman.game.game_over);
            return;
        }

        $('#mylives').html("You have " + hangman.game.tries_left + " tries left");
    };

    $('#buttons li').click(function()
    {
        if($(this).hasClass('active')){
            return;
        }

        $(this).addClass('active');

        var url = "{{ path('hangman_api_game_guess', {'game': '__GAME__', 'letter': '__LETTER__'}) }}"
            .replace('__GAME__', hangman.game.id)
            .replace('__LETTER__', $(this).text().toLowerCase());

        load(url, 'PUT', function(response)
        {
            if(!response.tries_left || response.tries_left < hangman.game.tries_left) {
                hangman.draw();
            }
            hangman.game = response;
            guessResult();
        });
    });

    $('#hint').click(function()
    {
        hangman.hint()
    });
    $('#reset').click(function()
    {
        hangman.reset();
    });

    return this;
};

$(document).ready(function()
{
    hangman.reset();
});